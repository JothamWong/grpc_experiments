// This file is automatically generated. Do not modify.
#include <myproto/message.grpc.pb.h>
#include <grpc/grpc.h>
#include <grpcpp/server_builder.h>
#include <iostream>

class MessageService final : public protobenchmark::Messages::Service {
public:
  virtual ::grpc::Status GetM0(::grpc::ServerContext *context,
                               const google::protobuf::Empty *request,
                               google::protobuf::Empty *result) {
    std::cout << "Server: Received M0 call " << std::endl;
    return grpc::Status::OK;
  }
    
virtual ::grpc::Status GetM1(::grpc::ServerContext *context, const ::protobenchmark::M1 *request, ::protobenchmark::M1 *m1) {
    std::cout << "Server: Received M1 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM2(::grpc::ServerContext *context, const ::protobenchmark::M2 *request, ::protobenchmark::M2 *m2) {
    std::cout << "Server: Received M2 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM3(::grpc::ServerContext *context, const ::protobenchmark::M3 *request, ::protobenchmark::M3 *m3) {
    std::cout << "Server: Received M3 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM4(::grpc::ServerContext *context, const ::protobenchmark::M4 *request, ::protobenchmark::M4 *m4) {
    std::cout << "Server: Received M4 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM5(::grpc::ServerContext *context, const ::protobenchmark::M5 *request, ::protobenchmark::M5 *m5) {
    std::cout << "Server: Received M5 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM6(::grpc::ServerContext *context, const ::protobenchmark::M6 *request, ::protobenchmark::M6 *m6) {
    std::cout << "Server: Received M6 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM7(::grpc::ServerContext *context, const ::protobenchmark::M7 *request, ::protobenchmark::M7 *m7) {
    std::cout << "Server: Received M7 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM8(::grpc::ServerContext *context, const ::protobenchmark::M8 *request, ::protobenchmark::M8 *m8) {
    std::cout << "Server: Received M8 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM9(::grpc::ServerContext *context, const ::protobenchmark::M9 *request, ::protobenchmark::M9 *m9) {
    std::cout << "Server: Received M9 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM10(::grpc::ServerContext *context, const ::protobenchmark::M10 *request, ::protobenchmark::M10 *m10) {
    std::cout << "Server: Received M10 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM11(::grpc::ServerContext *context, const ::protobenchmark::M11 *request, ::protobenchmark::M11 *m11) {
    std::cout << "Server: Received M11 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM12(::grpc::ServerContext *context, const ::protobenchmark::M12 *request, ::protobenchmark::M12 *m12) {
    std::cout << "Server: Received M12 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM13(::grpc::ServerContext *context, const ::protobenchmark::M13 *request, ::protobenchmark::M13 *m13) {
    std::cout << "Server: Received M13 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM14(::grpc::ServerContext *context, const ::protobenchmark::M14 *request, ::protobenchmark::M14 *m14) {
    std::cout << "Server: Received M14 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM15(::grpc::ServerContext *context, const ::protobenchmark::M15 *request, ::protobenchmark::M15 *m15) {
    std::cout << "Server: Received M15 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM16(::grpc::ServerContext *context, const ::protobenchmark::M16 *request, ::protobenchmark::M16 *m16) {
    std::cout << "Server: Received M16 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM17(::grpc::ServerContext *context, const ::protobenchmark::M17 *request, ::protobenchmark::M17 *m17) {
    std::cout << "Server: Received M17 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM18(::grpc::ServerContext *context, const ::protobenchmark::M18 *request, ::protobenchmark::M18 *m18) {
    std::cout << "Server: Received M18 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM19(::grpc::ServerContext *context, const ::protobenchmark::M19 *request, ::protobenchmark::M19 *m19) {
    std::cout << "Server: Received M19 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM20(::grpc::ServerContext *context, const ::protobenchmark::M20 *request, ::protobenchmark::M20 *m20) {
    std::cout << "Server: Received M20 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM21(::grpc::ServerContext *context, const ::protobenchmark::M21 *request, ::protobenchmark::M21 *m21) {
    std::cout << "Server: Received M21 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM22(::grpc::ServerContext *context, const ::protobenchmark::M22 *request, ::protobenchmark::M22 *m22) {
    std::cout << "Server: Received M22 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM23(::grpc::ServerContext *context, const ::protobenchmark::M23 *request, ::protobenchmark::M23 *m23) {
    std::cout << "Server: Received M23 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM24(::grpc::ServerContext *context, const ::protobenchmark::M24 *request, ::protobenchmark::M24 *m24) {
    std::cout << "Server: Received M24 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM25(::grpc::ServerContext *context, const ::protobenchmark::M25 *request, ::protobenchmark::M25 *m25) {
    std::cout << "Server: Received M25 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM26(::grpc::ServerContext *context, const ::protobenchmark::M26 *request, ::protobenchmark::M26 *m26) {
    std::cout << "Server: Received M26 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM27(::grpc::ServerContext *context, const ::protobenchmark::M27 *request, ::protobenchmark::M27 *m27) {
    std::cout << "Server: Received M27 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM28(::grpc::ServerContext *context, const ::protobenchmark::M28 *request, ::protobenchmark::M28 *m28) {
    std::cout << "Server: Received M28 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM29(::grpc::ServerContext *context, const ::protobenchmark::M29 *request, ::protobenchmark::M29 *m29) {
    std::cout << "Server: Received M29 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM30(::grpc::ServerContext *context, const ::protobenchmark::M30 *request, ::protobenchmark::M30 *m30) {
    std::cout << "Server: Received M30 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM31(::grpc::ServerContext *context, const ::protobenchmark::M31 *request, ::protobenchmark::M31 *m31) {
    std::cout << "Server: Received M31 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM32(::grpc::ServerContext *context, const ::protobenchmark::M32 *request, ::protobenchmark::M32 *m32) {
    std::cout << "Server: Received M32 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM33(::grpc::ServerContext *context, const ::protobenchmark::M33 *request, ::protobenchmark::M33 *m33) {
    std::cout << "Server: Received M33 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM34(::grpc::ServerContext *context, const ::protobenchmark::M34 *request, ::protobenchmark::M34 *m34) {
    std::cout << "Server: Received M34 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM35(::grpc::ServerContext *context, const ::protobenchmark::M35 *request, ::protobenchmark::M35 *m35) {
    std::cout << "Server: Received M35 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM36(::grpc::ServerContext *context, const ::protobenchmark::M36 *request, ::protobenchmark::M36 *m36) {
    std::cout << "Server: Received M36 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM37(::grpc::ServerContext *context, const ::protobenchmark::M37 *request, ::protobenchmark::M37 *m37) {
    std::cout << "Server: Received M37 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM38(::grpc::ServerContext *context, const ::protobenchmark::M38 *request, ::protobenchmark::M38 *m38) {
    std::cout << "Server: Received M38 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM39(::grpc::ServerContext *context, const ::protobenchmark::M39 *request, ::protobenchmark::M39 *m39) {
    std::cout << "Server: Received M39 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM40(::grpc::ServerContext *context, const ::protobenchmark::M40 *request, ::protobenchmark::M40 *m40) {
    std::cout << "Server: Received M40 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM41(::grpc::ServerContext *context, const ::protobenchmark::M41 *request, ::protobenchmark::M41 *m41) {
    std::cout << "Server: Received M41 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM42(::grpc::ServerContext *context, const ::protobenchmark::M42 *request, ::protobenchmark::M42 *m42) {
    std::cout << "Server: Received M42 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM43(::grpc::ServerContext *context, const ::protobenchmark::M43 *request, ::protobenchmark::M43 *m43) {
    std::cout << "Server: Received M43 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM44(::grpc::ServerContext *context, const ::protobenchmark::M44 *request, ::protobenchmark::M44 *m44) {
    std::cout << "Server: Received M44 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM45(::grpc::ServerContext *context, const ::protobenchmark::M45 *request, ::protobenchmark::M45 *m45) {
    std::cout << "Server: Received M45 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM46(::grpc::ServerContext *context, const ::protobenchmark::M46 *request, ::protobenchmark::M46 *m46) {
    std::cout << "Server: Received M46 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM47(::grpc::ServerContext *context, const ::protobenchmark::M47 *request, ::protobenchmark::M47 *m47) {
    std::cout << "Server: Received M47 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM48(::grpc::ServerContext *context, const ::protobenchmark::M48 *request, ::protobenchmark::M48 *m48) {
    std::cout << "Server: Received M48 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM49(::grpc::ServerContext *context, const ::protobenchmark::M49 *request, ::protobenchmark::M49 *m49) {
    std::cout << "Server: Received M49 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM50(::grpc::ServerContext *context, const ::protobenchmark::M50 *request, ::protobenchmark::M50 *m50) {
    std::cout << "Server: Received M50 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM51(::grpc::ServerContext *context, const ::protobenchmark::M51 *request, ::protobenchmark::M51 *m51) {
    std::cout << "Server: Received M51 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM52(::grpc::ServerContext *context, const ::protobenchmark::M52 *request, ::protobenchmark::M52 *m52) {
    std::cout << "Server: Received M52 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM53(::grpc::ServerContext *context, const ::protobenchmark::M53 *request, ::protobenchmark::M53 *m53) {
    std::cout << "Server: Received M53 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM54(::grpc::ServerContext *context, const ::protobenchmark::M54 *request, ::protobenchmark::M54 *m54) {
    std::cout << "Server: Received M54 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM55(::grpc::ServerContext *context, const ::protobenchmark::M55 *request, ::protobenchmark::M55 *m55) {
    std::cout << "Server: Received M55 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM56(::grpc::ServerContext *context, const ::protobenchmark::M56 *request, ::protobenchmark::M56 *m56) {
    std::cout << "Server: Received M56 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM57(::grpc::ServerContext *context, const ::protobenchmark::M57 *request, ::protobenchmark::M57 *m57) {
    std::cout << "Server: Received M57 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM58(::grpc::ServerContext *context, const ::protobenchmark::M58 *request, ::protobenchmark::M58 *m58) {
    std::cout << "Server: Received M58 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM59(::grpc::ServerContext *context, const ::protobenchmark::M59 *request, ::protobenchmark::M59 *m59) {
    std::cout << "Server: Received M59 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM60(::grpc::ServerContext *context, const ::protobenchmark::M60 *request, ::protobenchmark::M60 *m60) {
    std::cout << "Server: Received M60 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM61(::grpc::ServerContext *context, const ::protobenchmark::M61 *request, ::protobenchmark::M61 *m61) {
    std::cout << "Server: Received M61 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM62(::grpc::ServerContext *context, const ::protobenchmark::M62 *request, ::protobenchmark::M62 *m62) {
    std::cout << "Server: Received M62 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM63(::grpc::ServerContext *context, const ::protobenchmark::M63 *request, ::protobenchmark::M63 *m63) {
    std::cout << "Server: Received M63 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM64(::grpc::ServerContext *context, const ::protobenchmark::M64 *request, ::protobenchmark::M64 *m64) {
    std::cout << "Server: Received M64 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM65(::grpc::ServerContext *context, const ::protobenchmark::M65 *request, ::protobenchmark::M65 *m65) {
    std::cout << "Server: Received M65 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM66(::grpc::ServerContext *context, const ::protobenchmark::M66 *request, ::protobenchmark::M66 *m66) {
    std::cout << "Server: Received M66 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM67(::grpc::ServerContext *context, const ::protobenchmark::M67 *request, ::protobenchmark::M67 *m67) {
    std::cout << "Server: Received M67 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM68(::grpc::ServerContext *context, const ::protobenchmark::M68 *request, ::protobenchmark::M68 *m68) {
    std::cout << "Server: Received M68 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM69(::grpc::ServerContext *context, const ::protobenchmark::M69 *request, ::protobenchmark::M69 *m69) {
    std::cout << "Server: Received M69 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM70(::grpc::ServerContext *context, const ::protobenchmark::M70 *request, ::protobenchmark::M70 *m70) {
    std::cout << "Server: Received M70 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM71(::grpc::ServerContext *context, const ::protobenchmark::M71 *request, ::protobenchmark::M71 *m71) {
    std::cout << "Server: Received M71 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM72(::grpc::ServerContext *context, const ::protobenchmark::M72 *request, ::protobenchmark::M72 *m72) {
    std::cout << "Server: Received M72 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM73(::grpc::ServerContext *context, const ::protobenchmark::M73 *request, ::protobenchmark::M73 *m73) {
    std::cout << "Server: Received M73 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM74(::grpc::ServerContext *context, const ::protobenchmark::M74 *request, ::protobenchmark::M74 *m74) {
    std::cout << "Server: Received M74 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM75(::grpc::ServerContext *context, const ::protobenchmark::M75 *request, ::protobenchmark::M75 *m75) {
    std::cout << "Server: Received M75 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM76(::grpc::ServerContext *context, const ::protobenchmark::M76 *request, ::protobenchmark::M76 *m76) {
    std::cout << "Server: Received M76 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM77(::grpc::ServerContext *context, const ::protobenchmark::M77 *request, ::protobenchmark::M77 *m77) {
    std::cout << "Server: Received M77 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM78(::grpc::ServerContext *context, const ::protobenchmark::M78 *request, ::protobenchmark::M78 *m78) {
    std::cout << "Server: Received M78 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM79(::grpc::ServerContext *context, const ::protobenchmark::M79 *request, ::protobenchmark::M79 *m79) {
    std::cout << "Server: Received M79 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM80(::grpc::ServerContext *context, const ::protobenchmark::M80 *request, ::protobenchmark::M80 *m80) {
    std::cout << "Server: Received M80 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM81(::grpc::ServerContext *context, const ::protobenchmark::M81 *request, ::protobenchmark::M81 *m81) {
    std::cout << "Server: Received M81 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM82(::grpc::ServerContext *context, const ::protobenchmark::M82 *request, ::protobenchmark::M82 *m82) {
    std::cout << "Server: Received M82 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM83(::grpc::ServerContext *context, const ::protobenchmark::M83 *request, ::protobenchmark::M83 *m83) {
    std::cout << "Server: Received M83 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM84(::grpc::ServerContext *context, const ::protobenchmark::M84 *request, ::protobenchmark::M84 *m84) {
    std::cout << "Server: Received M84 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM85(::grpc::ServerContext *context, const ::protobenchmark::M85 *request, ::protobenchmark::M85 *m85) {
    std::cout << "Server: Received M85 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM86(::grpc::ServerContext *context, const ::protobenchmark::M86 *request, ::protobenchmark::M86 *m86) {
    std::cout << "Server: Received M86 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM87(::grpc::ServerContext *context, const ::protobenchmark::M87 *request, ::protobenchmark::M87 *m87) {
    std::cout << "Server: Received M87 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM88(::grpc::ServerContext *context, const ::protobenchmark::M88 *request, ::protobenchmark::M88 *m88) {
    std::cout << "Server: Received M88 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM89(::grpc::ServerContext *context, const ::protobenchmark::M89 *request, ::protobenchmark::M89 *m89) {
    std::cout << "Server: Received M89 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM90(::grpc::ServerContext *context, const ::protobenchmark::M90 *request, ::protobenchmark::M90 *m90) {
    std::cout << "Server: Received M90 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM91(::grpc::ServerContext *context, const ::protobenchmark::M91 *request, ::protobenchmark::M91 *m91) {
    std::cout << "Server: Received M91 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM92(::grpc::ServerContext *context, const ::protobenchmark::M92 *request, ::protobenchmark::M92 *m92) {
    std::cout << "Server: Received M92 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM93(::grpc::ServerContext *context, const ::protobenchmark::M93 *request, ::protobenchmark::M93 *m93) {
    std::cout << "Server: Received M93 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM94(::grpc::ServerContext *context, const ::protobenchmark::M94 *request, ::protobenchmark::M94 *m94) {
    std::cout << "Server: Received M94 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM95(::grpc::ServerContext *context, const ::protobenchmark::M95 *request, ::protobenchmark::M95 *m95) {
    std::cout << "Server: Received M95 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM96(::grpc::ServerContext *context, const ::protobenchmark::M96 *request, ::protobenchmark::M96 *m96) {
    std::cout << "Server: Received M96 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM97(::grpc::ServerContext *context, const ::protobenchmark::M97 *request, ::protobenchmark::M97 *m97) {
    std::cout << "Server: Received M97 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM98(::grpc::ServerContext *context, const ::protobenchmark::M98 *request, ::protobenchmark::M98 *m98) {
    std::cout << "Server: Received M98 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM99(::grpc::ServerContext *context, const ::protobenchmark::M99 *request, ::protobenchmark::M99 *m99) {
    std::cout << "Server: Received M99 call " << std::endl;
    return grpc::Status::OK;
    }
            
virtual ::grpc::Status GetM100(::grpc::ServerContext *context, const ::protobenchmark::M100 *request, ::protobenchmark::M100 *m100) {
    std::cout << "Server: Received M100 call " << std::endl;
    return grpc::Status::OK;
    }
            
};
int main(int argc, char *argv[]) {
    std::cout << "Server starting!" << std::endl;
    grpc::ServerBuilder builder;
    builder.AddListeningPort("0.0.0.0:50051", grpc::InsecureServerCredentials());
    MessageService message_service;
    builder.RegisterService(&message_service);
    std::unique_ptr<grpc::Server> server(builder.BuildAndStart());
    server->Wait();
    return 0;
    }
    